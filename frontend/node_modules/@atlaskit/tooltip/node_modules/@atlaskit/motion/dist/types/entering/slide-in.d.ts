import React from 'react';
import { ObjectInterpolation } from '@emotion/core';
import { AnimationCurve } from '../utils/curves';
import { KeyframesMotionProps } from './keyframes-motion';
import { Direction, Fade, Transition } from './types';
export declare const slideInAnimation: (from: Direction, state: Transition, fade: Fade) => ObjectInterpolation<undefined>;
export interface SlideInProps extends KeyframesMotionProps {
    /**
     * Direction the element will slide in from.
     * E.g. `"right"` will slide in from the right to the left.
  
     * If `exitTo` is not set, exiting will reverse this motion.
     * E.g. if `enterFrom: "right"`, will slide out to the right.
     */
    enterFrom: Direction;
    /**
     * Direction the element will slide out towards.
     * E.g. `"right"` will slide out to the right.
  
     * If this is not set, exiting will reverse the entrance motion.
     * E.g. if `enterFrom: "right"`, will slide out to the right.
     */
    exitTo?: Direction;
    /**
     * Whether an element will fade on enter, on exit or both.
  
     * `'none'` is the default and will cause the element to not fade,
     * `'in'` will cause the element to fade on enter,
     * `'out'` will cause the element to fade on exit,
     * `'inout'` will cause the element to fade on both
     */
    fade?: Fade;
    /**
     * A custom function used to override the default animation timings.
     * Returns which animation curve to use depending on the current transitioning state.
     */
    animationTimingFunction?: (state: Transition) => AnimationCurve;
}
declare const SlideIn: React.FC<SlideInProps>;
export default SlideIn;
