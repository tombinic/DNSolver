"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "AtlaskitThemeProvider", {
  enumerable: true,
  get: function get() {
    return _atlaskitThemeProvider.default;
  }
});
Object.defineProperty(exports, "CHANNEL", {
  enumerable: true,
  get: function get() {
    return _constants.CHANNEL;
  }
});
Object.defineProperty(exports, "DEFAULT_THEME_MODE", {
  enumerable: true,
  get: function get() {
    return _constants.DEFAULT_THEME_MODE;
  }
});
Object.defineProperty(exports, "THEME_MODES", {
  enumerable: true,
  get: function get() {
    return _constants.THEME_MODES;
  }
});
Object.defineProperty(exports, "assistive", {
  enumerable: true,
  get: function get() {
    return _constants.assistive;
  }
});
Object.defineProperty(exports, "borderRadius", {
  enumerable: true,
  get: function get() {
    return _constants.borderRadius;
  }
});
Object.defineProperty(exports, "codeFontFamily", {
  enumerable: true,
  get: function get() {
    return _constants.codeFontFamily;
  }
});
exports.colors = exports.colorPalettes = void 0;
Object.defineProperty(exports, "createTheme", {
  enumerable: true,
  get: function get() {
    return _createTheme.createTheme;
  }
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _theme.default;
  }
});
exports.elevation = void 0;
Object.defineProperty(exports, "focusRing", {
  enumerable: true,
  get: function get() {
    return _constants.focusRing;
  }
});
Object.defineProperty(exports, "fontFamily", {
  enumerable: true,
  get: function get() {
    return _constants.fontFamily;
  }
});
Object.defineProperty(exports, "fontSize", {
  enumerable: true,
  get: function get() {
    return _constants.fontSize;
  }
});
Object.defineProperty(exports, "fontSizeSmall", {
  enumerable: true,
  get: function get() {
    return _constants.fontSizeSmall;
  }
});
Object.defineProperty(exports, "getTheme", {
  enumerable: true,
  get: function get() {
    return _getTheme.default;
  }
});
Object.defineProperty(exports, "gridSize", {
  enumerable: true,
  get: function get() {
    return _constants.gridSize;
  }
});
Object.defineProperty(exports, "layers", {
  enumerable: true,
  get: function get() {
    return _constants.layers;
  }
});
Object.defineProperty(exports, "noFocusRing", {
  enumerable: true,
  get: function get() {
    return _constants.noFocusRing;
  }
});
Object.defineProperty(exports, "skeletonShimmer", {
  enumerable: true,
  get: function get() {
    return _constants.skeletonShimmer;
  }
});
Object.defineProperty(exports, "themed", {
  enumerable: true,
  get: function get() {
    return _themed.default;
  }
});
exports.typography = void 0;
Object.defineProperty(exports, "useGlobalTheme", {
  enumerable: true,
  get: function get() {
    return _theme.useGlobalTheme;
  }
});
Object.defineProperty(exports, "visuallyHidden", {
  enumerable: true,
  get: function get() {
    return _constants.visuallyHidden;
  }
});

var colorPalettes = _interopRequireWildcard(require("./color-palettes"));

exports.colorPalettes = colorPalettes;

var colors = _interopRequireWildcard(require("./colors"));

exports.colors = colors;

var _atlaskitThemeProvider = _interopRequireDefault(require("./components/atlaskit-theme-provider"));

var elevation = _interopRequireWildcard(require("./elevation"));

exports.elevation = elevation;

var typography = _interopRequireWildcard(require("./typography"));

exports.typography = typography;

var _getTheme = _interopRequireDefault(require("./utils/get-theme"));

var _themed = _interopRequireDefault(require("./utils/themed"));

var _constants = require("./constants");

var _theme = _interopRequireWildcard(require("./components/theme"));

var _createTheme = require("./utils/create-theme");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }