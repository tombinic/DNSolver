"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _constants = require("../constants");

var _atlaskitThemeProvider = _interopRequireDefault(require("./atlaskit-theme-provider"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable @repo/internal/react/no-unsafe-overrides */

/**
 * __Compat Theme Provider__
 *
 * This component is a wrapper over the `AtlaskitThemeProvider`.
 * It's exposed purely to aid migration off `styled-components`.
 *
 * @deprecated
 */
var CompatThemeProvider = /*#__PURE__*/(0, _react.memo)(function (_ref) {
  var _ref$mode = _ref.mode,
      mode = _ref$mode === void 0 ? _constants.DEFAULT_THEME_MODE : _ref$mode,
      Provider = _ref.provider,
      children = _ref.children;
  return /*#__PURE__*/_react.default.createElement(Provider, {
    theme: (0, _defineProperty2.default)({}, _constants.CHANNEL, {
      mode: mode
    })
  }, /*#__PURE__*/_react.default.createElement(_atlaskitThemeProvider.default, {
    mode: mode
  }, children));
});
var _default = CompatThemeProvider;
exports.default = _default;