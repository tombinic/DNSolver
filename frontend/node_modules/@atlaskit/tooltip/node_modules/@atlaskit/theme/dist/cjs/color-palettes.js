"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.colorPalette8 = exports.colorPalette24 = exports.colorPalette16 = exports.colorPalette = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var colors = _interopRequireWildcard(require("./colors"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable @atlaskit/design-system/ensure-design-token-usage */
// Jira Portfolio
var colorPalette8 = [{
  background: colors.N800,
  text: colors.N0
}, {
  background: colors.R400,
  text: colors.N0
}, {
  background: colors.P400,
  text: colors.P50
}, {
  background: colors.B400,
  text: colors.B75
}, {
  background: colors.T300,
  text: colors.N800
}, {
  background: colors.G400,
  text: colors.N0
}, {
  background: colors.Y400,
  text: colors.N800
}, {
  background: colors.N70,
  text: colors.N800
}];
exports.colorPalette8 = colorPalette8;
var colorPalette16 = [].concat(colorPalette8, [{
  background: colors.N500,
  text: colors.N0
}, {
  background: colors.R100,
  text: colors.N800
}, {
  background: colors.P75,
  text: colors.N800
}, {
  background: colors.B100,
  text: colors.N800
}, {
  background: colors.T100,
  text: colors.N800
}, {
  background: colors.G100,
  text: colors.G500
}, {
  background: colors.Y200,
  text: colors.N800
}, {
  background: colors.N0,
  text: colors.N800
}]);
exports.colorPalette16 = colorPalette16;
var colorPalette24 = [].concat((0, _toConsumableArray2.default)(colorPalette16), [{
  background: colors.N100,
  text: colors.N0
}, {
  background: colors.N40,
  text: colors.N800
}, {
  background: colors.N50,
  text: colors.R500
}, {
  background: colors.P50,
  text: colors.P500
}, {
  background: colors.B50,
  text: colors.B500
}, {
  background: colors.T75,
  text: colors.N800
}, {
  background: colors.G50,
  text: colors.G500
}, {
  background: colors.Y75,
  text: colors.N800
}]);
exports.colorPalette24 = colorPalette24;

var colorPalette = function colorPalette() {
  var palette = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '8';

  switch (palette) {
    case '8':
      return colorPalette8;

    case '16':
      return colorPalette16;

    case '24':
      return colorPalette24;

    default:
      throw new Error('The only available color palette is 8, 16, 24');
  }
};

exports.colorPalette = colorPalette;