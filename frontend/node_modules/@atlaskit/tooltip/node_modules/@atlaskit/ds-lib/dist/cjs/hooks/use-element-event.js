"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useElementEvent;

var _react = require("react");

/**
 * Assigns an event listener to the passed in element and cleans up after itself.
 * This event will not flow through the React event system,
 * which means it could add lots of event listeners affecting performance.
 * Use with caution.
 *
 * ```
 * useElementEvent(element, 'click', callback, true);
 * ```
 *
 * @param element
 * @param eventName
 * @param callback Ensure a stable reference else you will have your event bound/unbound unexpectedly.
 * @param options Ensure a stable reference else you will have your event bound/unbound unexpectedly.
 */
function useElementEvent(element, eventName, callback, options) {
  (0, _react.useEffect)(function () {
    element.addEventListener(eventName, callback, options);
    return function () {
      element.removeEventListener(eventName, callback, options);
    };
  }, [eventName, callback, element, options]);
}