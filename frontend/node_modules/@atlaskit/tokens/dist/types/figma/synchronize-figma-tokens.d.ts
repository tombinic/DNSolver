import type { PaintToken, ShadowToken } from '../types';
import type { FigmaEffect, FigmaPaint } from './types';
declare function createPaint(hex: string): FigmaPaint;
declare function createEffects(value: ShadowToken<string>['value']): FigmaEffect[];
/**
 * Formats a token description for use in Figma,
 * including deprecated warnings
 *
 * @param token
 */
declare function formatDescription(token: PaintToken<string> | ShadowToken<string>): string;
export declare type CreateEffects = typeof createEffects;
export declare type CreatePaint = typeof createPaint;
export declare type FormatDescription = typeof formatDescription;
/**
 * Adds tokens under a specified theme as paint styles to Figma.
 *
 * @param {*} themeName name of the theme, e.g. "dark". Tokens will be added under this folder name.
 * @param {*} tokens
 * @param {*} renameMap mapping object for tokens that should be renamed. example { 'old/token': 'new/token'}
 */
declare function synchronizeFigmaTokens(themeName: string, tokens: Record<string, PaintToken<string> | ShadowToken<string>>, renameMap?: Record<string, string>): void;
export declare type SynchronizeFigmaTokens = typeof synchronizeFigmaTokens;
export {};
