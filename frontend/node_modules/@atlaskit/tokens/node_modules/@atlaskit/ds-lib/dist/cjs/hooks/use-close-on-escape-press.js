"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useCloseOnEscapePress;

var _react = require("react");

var _keycodes = require("../utils/keycodes");

var _useDocumentEvent = _interopRequireDefault(require("./use-document-event"));

/**
 * Calls back when the escape key is pressed.
 * To be used exclusively for closing layered components.
 * Use the `isDisabled` argument to ignore closing events.
 *
 * ```js
 * useCloseOnEscapePress({
 *   onClose: () => {},
 *   isDisabled: false,
 * });
 * ```
 */
function useCloseOnEscapePress(_ref) {
  var onClose = _ref.onClose,
      isDisabled = _ref.isDisabled;
  var escapePressed = (0, _react.useRef)(false);
  var onKeyDown = (0, _react.useCallback)(function (e) {
    if (isDisabled || escapePressed.current || e.key !== _keycodes.ESCAPE) {
      // We're either already handling the key down event or it's not escape.
      // Bail early!
      return;
    }

    escapePressed.current = true;
    onClose(e);
  }, [onClose, isDisabled]);
  var onKeyUp = (0, _react.useCallback)(function () {
    escapePressed.current = false;
  }, []);
  (0, _useDocumentEvent.default)('keydown', onKeyDown, false);
  (0, _useDocumentEvent.default)('keyup', onKeyUp, false);
}