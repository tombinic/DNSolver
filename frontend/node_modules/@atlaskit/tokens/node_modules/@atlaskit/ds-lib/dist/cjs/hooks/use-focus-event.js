"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useFocus;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

function useFocus() {
  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      isFocused = _useState2[0],
      setIsFocused = _useState2[1]; // ensure bindFocus has a stable ref


  var bindFocus = (0, _react.useRef)({
    onFocus: function onFocus() {
      return setIsFocused(true);
    },
    onBlur: function onBlur() {
      return setIsFocused(false);
    }
  });
  (0, _react.useEffect)(function () {
    // handle the case where a component might
    // unmount while being focused.
    return function () {
      return setIsFocused(false);
    };
  }, []);
  return {
    isFocused: isFocused,
    bindFocus: bindFocus.current
  };
}