{"ast":null,"code":"/** @jsx jsx */\nimport { forwardRef } from 'react';\nimport { css, jsx } from '@emotion/core';\nimport { DN0, DN600, N0, N800 } from '@atlaskit/theme/colors';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { borderRadius } from '@atlaskit/theme/constants';\nimport TooltipPrimitive from './TooltipPrimitive';\nvar baseStyles = css({\n  boxSizing: 'border-box',\n  maxWidth: '240px',\n  padding: '2px 6px',\n  top: 0,\n  left: 0,\n  borderRadius: \"\".concat(borderRadius(), \"px\"),\n  fontSize: '12px',\n  lineHeight: 1.3,\n  overflowWrap: 'break-word',\n  wordWrap: 'break-word'\n});\nvar truncateStyles = css({\n  maxWidth: '420px',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n});\nvar lightStyles = css({\n  backgroundColor: \"var(--ds-background-neutral-bold, \".concat(N800, \")\"),\n  color: \"var(--ds-text-inverse, \".concat(N0, \")\")\n});\nvar darkStyles = css({\n  backgroundColor: \"var(--ds-background-neutral-bold, \".concat(DN0, \")\"),\n  color: \"var(--ds-text-inverse, \".concat(DN600, \")\")\n});\nvar TooltipContainer = /*#__PURE__*/forwardRef(function TooltipContainer(_ref, ref) {\n  var style = _ref.style,\n      className = _ref.className,\n      children = _ref.children,\n      truncate = _ref.truncate,\n      placement = _ref.placement,\n      testId = _ref.testId,\n      onMouseOut = _ref.onMouseOut,\n      onMouseOver = _ref.onMouseOver,\n      id = _ref.id;\n  return jsx(GlobalTheme.Consumer, null, function (_ref2) {\n    var mode = _ref2.mode;\n    return (// eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n      jsx(TooltipPrimitive, {\n        ref: ref,\n        style: style,\n        className: className,\n        placement: placement,\n        testId: testId,\n        id: id,\n        onMouseOut: onMouseOut,\n        onMouseOver: onMouseOver,\n        css: [baseStyles, truncate ? truncateStyles : null, mode === 'light' ? lightStyles : darkStyles]\n      }, children)\n    );\n  });\n});\nTooltipContainer.displayName = 'TooltipContainer';\nexport default TooltipContainer;","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/dist/esm/TooltipContainer.js"],"names":["forwardRef","css","jsx","DN0","DN600","N0","N800","GlobalTheme","borderRadius","TooltipPrimitive","baseStyles","boxSizing","maxWidth","padding","top","left","concat","fontSize","lineHeight","overflowWrap","wordWrap","truncateStyles","overflow","textOverflow","whiteSpace","lightStyles","backgroundColor","color","darkStyles","TooltipContainer","_ref","ref","style","className","children","truncate","placement","testId","onMouseOut","onMouseOver","id","Consumer","_ref2","mode","displayName"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { forwardRef } from 'react';\nimport { css, jsx } from '@emotion/core';\nimport { DN0, DN600, N0, N800 } from '@atlaskit/theme/colors';\nimport GlobalTheme from '@atlaskit/theme/components';\nimport { borderRadius } from '@atlaskit/theme/constants';\nimport TooltipPrimitive from './TooltipPrimitive';\nvar baseStyles = css({\n  boxSizing: 'border-box',\n  maxWidth: '240px',\n  padding: '2px 6px',\n  top: 0,\n  left: 0,\n  borderRadius: \"\".concat(borderRadius(), \"px\"),\n  fontSize: '12px',\n  lineHeight: 1.3,\n  overflowWrap: 'break-word',\n  wordWrap: 'break-word'\n});\nvar truncateStyles = css({\n  maxWidth: '420px',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n});\nvar lightStyles = css({\n  backgroundColor: \"var(--ds-background-neutral-bold, \".concat(N800, \")\"),\n  color: \"var(--ds-text-inverse, \".concat(N0, \")\")\n});\nvar darkStyles = css({\n  backgroundColor: \"var(--ds-background-neutral-bold, \".concat(DN0, \")\"),\n  color: \"var(--ds-text-inverse, \".concat(DN600, \")\")\n});\nvar TooltipContainer = /*#__PURE__*/forwardRef(function TooltipContainer(_ref, ref) {\n  var style = _ref.style,\n      className = _ref.className,\n      children = _ref.children,\n      truncate = _ref.truncate,\n      placement = _ref.placement,\n      testId = _ref.testId,\n      onMouseOut = _ref.onMouseOut,\n      onMouseOver = _ref.onMouseOver,\n      id = _ref.id;\n  return jsx(GlobalTheme.Consumer, null, function (_ref2) {\n    var mode = _ref2.mode;\n    return (// eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n      jsx(TooltipPrimitive, {\n        ref: ref,\n        style: style,\n        className: className,\n        placement: placement,\n        testId: testId,\n        id: id,\n        onMouseOut: onMouseOut,\n        onMouseOver: onMouseOver,\n        css: [baseStyles, truncate ? truncateStyles : null, mode === 'light' ? lightStyles : darkStyles]\n      }, children)\n    );\n  });\n});\nTooltipContainer.displayName = 'TooltipContainer';\nexport default TooltipContainer;"]},"metadata":{},"sourceType":"module"}