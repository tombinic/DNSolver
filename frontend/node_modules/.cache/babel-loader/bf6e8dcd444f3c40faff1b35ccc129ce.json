{"ast":null,"code":"import { clearScheduled, scheduleTimeout } from './shared-schedule'; // This file is a singleton for managing tooltips\n\nvar active = null;\nexport function show(entry) {\n  var phase = 'waiting-to-show';\n\n  function isActive() {\n    return Boolean(active && active.entry === entry);\n  }\n\n  function cleanup() {\n    if (isActive()) {\n      clearScheduled();\n      active = null;\n    }\n  }\n\n  function done() {\n    if (isActive()) {\n      entry.done();\n    }\n\n    phase = 'done';\n    cleanup();\n  }\n\n  function immediatelyHideAndDone() {\n    if (isActive()) {\n      entry.hide({\n        isImmediate: true\n      });\n    }\n\n    done();\n  }\n\n  function keep() {\n    if (!isActive()) {\n      return;\n    } // aborting a wait to hide\n\n\n    if (phase === 'waiting-to-hide') {\n      phase = 'shown';\n      clearScheduled();\n      return;\n    } // aborting hide animation\n\n\n    if (phase === 'hide-animating') {\n      phase = 'shown';\n      clearScheduled();\n      entry.show({\n        isImmediate: false\n      });\n      return;\n    }\n  }\n\n  function requestHide(_ref) {\n    var isImmediate = _ref.isImmediate;\n\n    if (!isActive()) {\n      return;\n    } // If we were not showing yet anyway; finish straight away\n\n\n    if (phase === 'waiting-to-show') {\n      immediatelyHideAndDone();\n      return;\n    } // already waiting to hide\n\n\n    if (phase === 'waiting-to-hide') {\n      return;\n    }\n\n    if (isImmediate) {\n      immediatelyHideAndDone();\n      return;\n    }\n\n    phase = 'waiting-to-hide';\n    scheduleTimeout(function () {\n      phase = 'hide-animating';\n      entry.hide({\n        isImmediate: false\n      });\n    }, entry.delay);\n  }\n\n  function finishHideAnimation() {\n    if (isActive() && phase === 'hide-animating') {\n      done();\n    }\n  }\n\n  function isVisible() {\n    return phase === 'shown' || phase === 'waiting-to-hide' || phase === 'hide-animating';\n  }\n\n  function getInitialMouse() {\n    if (entry.source.type === 'mouse') {\n      return entry.source.mouse;\n    }\n\n    return null;\n  }\n\n  function start() {\n    var showImmediately = Boolean(active && active.isVisible()); // If there was an active tooltip; we tell it to remove itself at once!\n\n    if (active) {\n      clearScheduled();\n      active.entry.hide({\n        isImmediate: true\n      });\n      active.entry.done();\n      active = null;\n    } // this tooltip is now the active tooltip\n\n\n    active = {\n      entry: entry,\n      isVisible: isVisible\n    };\n\n    function show() {\n      phase = 'shown';\n      entry.show({\n        isImmediate: showImmediately\n      });\n    }\n\n    if (showImmediately) {\n      show();\n      return;\n    }\n\n    phase = 'waiting-to-show';\n    scheduleTimeout(show, entry.delay);\n  } // let's get started!\n\n\n  start();\n  var result = {\n    keep: keep,\n    abort: cleanup,\n    isActive: isActive,\n    requestHide: requestHide,\n    finishHideAnimation: finishHideAnimation,\n    getInitialMouse: getInitialMouse\n  };\n  return result;\n}","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/dist/esm/internal/tooltip-manager.js"],"names":["clearScheduled","scheduleTimeout","active","show","entry","phase","isActive","Boolean","cleanup","done","immediatelyHideAndDone","hide","isImmediate","keep","requestHide","_ref","delay","finishHideAnimation","isVisible","getInitialMouse","source","type","mouse","start","showImmediately","result","abort"],"mappings":"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","sourcesContent":["import { clearScheduled, scheduleTimeout } from './shared-schedule'; // This file is a singleton for managing tooltips\n\nvar active = null;\nexport function show(entry) {\n  var phase = 'waiting-to-show';\n\n  function isActive() {\n    return Boolean(active && active.entry === entry);\n  }\n\n  function cleanup() {\n    if (isActive()) {\n      clearScheduled();\n      active = null;\n    }\n  }\n\n  function done() {\n    if (isActive()) {\n      entry.done();\n    }\n\n    phase = 'done';\n    cleanup();\n  }\n\n  function immediatelyHideAndDone() {\n    if (isActive()) {\n      entry.hide({\n        isImmediate: true\n      });\n    }\n\n    done();\n  }\n\n  function keep() {\n    if (!isActive()) {\n      return;\n    } // aborting a wait to hide\n\n\n    if (phase === 'waiting-to-hide') {\n      phase = 'shown';\n      clearScheduled();\n      return;\n    } // aborting hide animation\n\n\n    if (phase === 'hide-animating') {\n      phase = 'shown';\n      clearScheduled();\n      entry.show({\n        isImmediate: false\n      });\n      return;\n    }\n  }\n\n  function requestHide(_ref) {\n    var isImmediate = _ref.isImmediate;\n\n    if (!isActive()) {\n      return;\n    } // If we were not showing yet anyway; finish straight away\n\n\n    if (phase === 'waiting-to-show') {\n      immediatelyHideAndDone();\n      return;\n    } // already waiting to hide\n\n\n    if (phase === 'waiting-to-hide') {\n      return;\n    }\n\n    if (isImmediate) {\n      immediatelyHideAndDone();\n      return;\n    }\n\n    phase = 'waiting-to-hide';\n    scheduleTimeout(function () {\n      phase = 'hide-animating';\n      entry.hide({\n        isImmediate: false\n      });\n    }, entry.delay);\n  }\n\n  function finishHideAnimation() {\n    if (isActive() && phase === 'hide-animating') {\n      done();\n    }\n  }\n\n  function isVisible() {\n    return phase === 'shown' || phase === 'waiting-to-hide' || phase === 'hide-animating';\n  }\n\n  function getInitialMouse() {\n    if (entry.source.type === 'mouse') {\n      return entry.source.mouse;\n    }\n\n    return null;\n  }\n\n  function start() {\n    var showImmediately = Boolean(active && active.isVisible()); // If there was an active tooltip; we tell it to remove itself at once!\n\n    if (active) {\n      clearScheduled();\n      active.entry.hide({\n        isImmediate: true\n      });\n      active.entry.done();\n      active = null;\n    } // this tooltip is now the active tooltip\n\n\n    active = {\n      entry: entry,\n      isVisible: isVisible\n    };\n\n    function show() {\n      phase = 'shown';\n      entry.show({\n        isImmediate: showImmediately\n      });\n    }\n\n    if (showImmediately) {\n      show();\n      return;\n    }\n\n    phase = 'waiting-to-show';\n    scheduleTimeout(show, entry.delay);\n  } // let's get started!\n\n\n  start();\n  var result = {\n    keep: keep,\n    abort: cleanup,\n    isActive: isActive,\n    requestHide: requestHide,\n    finishHideAnimation: finishHideAnimation,\n    getInitialMouse: getInitialMouse\n  };\n  return result;\n}"]},"metadata":{},"sourceType":"module"}