{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nvar settle = require('./../core/settle');\n\nvar cookies = require('./../helpers/cookies');\n\nvar buildURL = require('./../helpers/buildURL');\n\nvar buildFullPath = require('../core/buildFullPath');\n\nvar parseHeaders = require('./../helpers/parseHeaders');\n\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\n\nvar transitionalDefaults = require('../defaults/transitional');\n\nvar AxiosError = require('../core/AxiosError');\n\nvar CanceledError = require('../cancel/CanceledError');\n\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest(); // HTTP basic authentication\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      } // Prepare the response\n\n\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response); // Clean up request\n\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        } // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n\n\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        } // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n\n\n        setTimeout(onloadend);\n      };\n    } // Handle browser request cancellation (as opposed to a manual cancellation)\n\n\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request)); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n\n      reject(new AxiosError(timeoutErrorMessage, transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED, config, request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    } // Add headers to the request\n\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    } // Add responseType to request if needed\n\n\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function (cancel) {\n        if (!request) {\n          return;\n        }\n\n        reject(!cancel || cancel && cancel.type ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && ['http', 'https', 'file'].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    } // Send the request\n\n\n    request.send(requestData);\n  });\n};","map":{"version":3,"sources":["C:/Users/nicol/Documents/GitHub/Telematica/frontend/node_modules/axios/lib/adapters/xhr.js"],"names":["utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","module","exports","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","responseType","onCanceled","done","cancelToken","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onloadend","responseHeaders","getAllResponseHeaders","responseData","responseText","response","status","statusText","_resolve","value","_reject","err","onreadystatechange","handleLoad","readyState","responseURL","indexOf","setTimeout","onabort","handleAbort","ECONNABORTED","onerror","handleError","ERR_NETWORK","ontimeout","handleTimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","send"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar utils = require('./../utils');\r\nvar settle = require('./../core/settle');\r\nvar cookies = require('./../helpers/cookies');\r\nvar buildURL = require('./../helpers/buildURL');\r\nvar buildFullPath = require('../core/buildFullPath');\r\nvar parseHeaders = require('./../helpers/parseHeaders');\r\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\r\nvar transitionalDefaults = require('../defaults/transitional');\r\nvar AxiosError = require('../core/AxiosError');\r\nvar CanceledError = require('../cancel/CanceledError');\r\nvar parseProtocol = require('../helpers/parseProtocol');\r\n\r\nmodule.exports = function xhrAdapter(config) {\r\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n    var requestData = config.data;\r\n    var requestHeaders = config.headers;\r\n    var responseType = config.responseType;\r\n    var onCanceled;\r\n    function done() {\r\n      if (config.cancelToken) {\r\n        config.cancelToken.unsubscribe(onCanceled);\r\n      }\r\n\r\n      if (config.signal) {\r\n        config.signal.removeEventListener('abort', onCanceled);\r\n      }\r\n    }\r\n\r\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\r\n      delete requestHeaders['Content-Type']; // Let the browser set it\r\n    }\r\n\r\n    var request = new XMLHttpRequest();\r\n\r\n    // HTTP basic authentication\r\n    if (config.auth) {\r\n      var username = config.auth.username || '';\r\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\r\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    var fullPath = buildFullPath(config.baseURL, config.url);\r\n\r\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\r\n    // Set the request timeout in MS\r\n    request.timeout = config.timeout;\r\n\r\n    function onloadend() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n      // Prepare the response\r\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\r\n        request.responseText : request.response;\r\n      var response = {\r\n        data: responseData,\r\n        status: request.status,\r\n        statusText: request.statusText,\r\n        headers: responseHeaders,\r\n        config: config,\r\n        request: request\r\n      };\r\n\r\n      settle(function _resolve(value) {\r\n        resolve(value);\r\n        done();\r\n      }, function _reject(err) {\r\n        reject(err);\r\n        done();\r\n      }, response);\r\n\r\n      // Clean up request\r\n      request = null;\r\n    }\r\n\r\n    if ('onloadend' in request) {\r\n      // Use onloadend if available\r\n      request.onloadend = onloadend;\r\n    } else {\r\n      // Listen for ready state to emulate onloadend\r\n      request.onreadystatechange = function handleLoad() {\r\n        if (!request || request.readyState !== 4) {\r\n          return;\r\n        }\r\n\r\n        // The request errored out and we didn't get a response, this will be\r\n        // handled by onerror instead\r\n        // With one exception: request that using file: protocol, most browsers\r\n        // will return status as 0 even though it's a successful request\r\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n          return;\r\n        }\r\n        // readystate handler is calling before onerror or ontimeout handlers,\r\n        // so we should call onloadend on the next 'tick'\r\n        setTimeout(onloadend);\r\n      };\r\n    }\r\n\r\n    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n    request.onabort = function handleAbort() {\r\n      if (!request) {\r\n        return;\r\n      }\r\n\r\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle low level network errors\r\n    request.onerror = function handleError() {\r\n      // Real errors are hidden from us by the browser\r\n      // onerror should only fire if it's a network error\r\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Handle timeout\r\n    request.ontimeout = function handleTimeout() {\r\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\r\n      var transitional = config.transitional || transitionalDefaults;\r\n      if (config.timeoutErrorMessage) {\r\n        timeoutErrorMessage = config.timeoutErrorMessage;\r\n      }\r\n      reject(new AxiosError(\r\n        timeoutErrorMessage,\r\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\r\n        config,\r\n        request));\r\n\r\n      // Clean up request\r\n      request = null;\r\n    };\r\n\r\n    // Add xsrf header\r\n    // This is only done if running in a standard browser environment.\r\n    // Specifically not if we're in a web worker, or react-native.\r\n    if (utils.isStandardBrowserEnv()) {\r\n      // Add xsrf header\r\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n        cookies.read(config.xsrfCookieName) :\r\n        undefined;\r\n\r\n      if (xsrfValue) {\r\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n      }\r\n    }\r\n\r\n    // Add headers to the request\r\n    if ('setRequestHeader' in request) {\r\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n          // Remove Content-Type if data is undefined\r\n          delete requestHeaders[key];\r\n        } else {\r\n          // Otherwise add header to the request\r\n          request.setRequestHeader(key, val);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add withCredentials to request if needed\r\n    if (!utils.isUndefined(config.withCredentials)) {\r\n      request.withCredentials = !!config.withCredentials;\r\n    }\r\n\r\n    // Add responseType to request if needed\r\n    if (responseType && responseType !== 'json') {\r\n      request.responseType = config.responseType;\r\n    }\r\n\r\n    // Handle progress if needed\r\n    if (typeof config.onDownloadProgress === 'function') {\r\n      request.addEventListener('progress', config.onDownloadProgress);\r\n    }\r\n\r\n    // Not all browsers support upload events\r\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n      request.upload.addEventListener('progress', config.onUploadProgress);\r\n    }\r\n\r\n    if (config.cancelToken || config.signal) {\r\n      // Handle cancellation\r\n      // eslint-disable-next-line func-names\r\n      onCanceled = function(cancel) {\r\n        if (!request) {\r\n          return;\r\n        }\r\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\r\n        request.abort();\r\n        request = null;\r\n      };\r\n\r\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\r\n      if (config.signal) {\r\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\r\n      }\r\n    }\r\n\r\n    if (!requestData) {\r\n      requestData = null;\r\n    }\r\n\r\n    var protocol = parseProtocol(fullPath);\r\n\r\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\r\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\r\n      return;\r\n    }\r\n\r\n\r\n    // Send the request\r\n    request.send(requestData);\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"script"}