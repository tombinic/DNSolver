{"ast":null,"code":"import { useCallback, useRef } from 'react';\nimport { ESCAPE } from '../utils/keycodes';\nimport useDocumentEvent from './use-document-event';\n/**\n * Calls back when the escape key is pressed.\n * To be used exclusively for closing layered components.\n * Use the `isDisabled` argument to ignore closing events.\n *\n * ```js\n * useCloseOnEscapePress({\n *   onClose: () => {},\n *   isDisabled: false,\n * });\n * ```\n */\n\nexport default function useCloseOnEscapePress(_ref) {\n  var onClose = _ref.onClose,\n      isDisabled = _ref.isDisabled;\n  var escapePressed = useRef(false);\n  var onKeyDown = useCallback(function (e) {\n    if (isDisabled || escapePressed.current || e.key !== ESCAPE) {\n      // We're either already handling the key down event or it's not escape.\n      // Bail early!\n      return;\n    }\n\n    escapePressed.current = true;\n    onClose(e);\n  }, [onClose, isDisabled]);\n  var onKeyUp = useCallback(function () {\n    escapePressed.current = false;\n  }, []);\n  useDocumentEvent('keydown', onKeyDown, false);\n  useDocumentEvent('keyup', onKeyUp, false);\n}","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-close-on-escape-press.js"],"names":["useCallback","useRef","ESCAPE","useDocumentEvent","useCloseOnEscapePress","_ref","onClose","isDisabled","escapePressed","onKeyDown","e","current","key","onKeyUp"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AAClD,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,MACIC,UAAU,GAAGF,IAAI,CAACE,UADtB;AAEA,MAAIC,aAAa,GAAGP,MAAM,CAAC,KAAD,CAA1B;AACA,MAAIQ,SAAS,GAAGT,WAAW,CAAC,UAAUU,CAAV,EAAa;AACvC,QAAIH,UAAU,IAAIC,aAAa,CAACG,OAA5B,IAAuCD,CAAC,CAACE,GAAF,KAAUV,MAArD,EAA6D;AAC3D;AACA;AACA;AACD;;AAEDM,IAAAA,aAAa,CAACG,OAAd,GAAwB,IAAxB;AACAL,IAAAA,OAAO,CAACI,CAAD,CAAP;AACD,GAT0B,EASxB,CAACJ,OAAD,EAAUC,UAAV,CATwB,CAA3B;AAUA,MAAIM,OAAO,GAAGb,WAAW,CAAC,YAAY;AACpCQ,IAAAA,aAAa,CAACG,OAAd,GAAwB,KAAxB;AACD,GAFwB,EAEtB,EAFsB,CAAzB;AAGAR,EAAAA,gBAAgB,CAAC,SAAD,EAAYM,SAAZ,EAAuB,KAAvB,CAAhB;AACAN,EAAAA,gBAAgB,CAAC,OAAD,EAAUU,OAAV,EAAmB,KAAnB,CAAhB;AACD","sourcesContent":["import { useCallback, useRef } from 'react';\nimport { ESCAPE } from '../utils/keycodes';\nimport useDocumentEvent from './use-document-event';\n\n/**\n * Calls back when the escape key is pressed.\n * To be used exclusively for closing layered components.\n * Use the `isDisabled` argument to ignore closing events.\n *\n * ```js\n * useCloseOnEscapePress({\n *   onClose: () => {},\n *   isDisabled: false,\n * });\n * ```\n */\nexport default function useCloseOnEscapePress(_ref) {\n  var onClose = _ref.onClose,\n      isDisabled = _ref.isDisabled;\n  var escapePressed = useRef(false);\n  var onKeyDown = useCallback(function (e) {\n    if (isDisabled || escapePressed.current || e.key !== ESCAPE) {\n      // We're either already handling the key down event or it's not escape.\n      // Bail early!\n      return;\n    }\n\n    escapePressed.current = true;\n    onClose(e);\n  }, [onClose, isDisabled]);\n  var onKeyUp = useCallback(function () {\n    escapePressed.current = false;\n  }, []);\n  useDocumentEvent('keydown', onKeyDown, false);\n  useDocumentEvent('keyup', onKeyUp, false);\n}"]},"metadata":{},"sourceType":"module"}