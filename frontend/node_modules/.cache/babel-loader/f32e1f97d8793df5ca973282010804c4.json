{"ast":null,"code":"import { useCallback, useRef } from 'react';\n/**\n * Will return a tuple of the element and the callback ref to set.\n * This is used as a work around for using `useRef` directly with Typescript\n * as the types don't flow through as one would expect.\n */\n\nexport var useElementRef = function useElementRef() {\n  var elementRef = useRef(null);\n  var setRef = useCallback(function (ref) {\n    elementRef.current = ref;\n  }, []);\n  return [elementRef.current, setRef];\n};","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/node_modules/@atlaskit/motion/dist/esm/utils/use-element-ref.js"],"names":["useCallback","useRef","useElementRef","elementRef","setRef","ref","current"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,MAAtB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,aAAa,GAAG,SAASA,aAAT,GAAyB;AAClD,MAAIC,UAAU,GAAGF,MAAM,CAAC,IAAD,CAAvB;AACA,MAAIG,MAAM,GAAGJ,WAAW,CAAC,UAAUK,GAAV,EAAe;AACtCF,IAAAA,UAAU,CAACG,OAAX,GAAqBD,GAArB;AACD,GAFuB,EAErB,EAFqB,CAAxB;AAGA,SAAO,CAACF,UAAU,CAACG,OAAZ,EAAqBF,MAArB,CAAP;AACD,CANM","sourcesContent":["import { useCallback, useRef } from 'react';\n\n/**\n * Will return a tuple of the element and the callback ref to set.\n * This is used as a work around for using `useRef` directly with Typescript\n * as the types don't flow through as one would expect.\n */\nexport var useElementRef = function useElementRef() {\n  var elementRef = useRef(null);\n  var setRef = useCallback(function (ref) {\n    elementRef.current = ref;\n  }, []);\n  return [elementRef.current, setRef];\n};"]},"metadata":{},"sourceType":"module"}