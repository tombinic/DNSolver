{"ast":null,"code":"import deprecationWarning from '@atlaskit/ds-lib/deprecation-warning';\nimport { B100, N30A, skeleton as skeletonColor } from './colors';\nexport var CHANNEL = '__ATLASKIT_THEME__';\nexport var DEFAULT_THEME_MODE = 'light';\nexport var THEME_MODES = ['light', 'dark'];\n/*\n  These theme values are expressed as functions so that if we decide to make\n  them dependent on props in the future, it wouldn't require a significant\n  refactor everywhere they are being used.\n*/\n\nexport var borderRadius = function borderRadius() {\n  return 3;\n};\nexport var gridSize = function gridSize() {\n  return 8;\n};\nexport var fontSize = function fontSize() {\n  return 14;\n};\nexport var fontSizeSmall = function fontSizeSmall() {\n  return 11;\n};\nexport var fontFamily = function fontFamily() {\n  return \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\n};\nexport var codeFontFamily = function codeFontFamily() {\n  return \"'SFMono-Medium', 'SF Mono', 'Segoe UI Mono', 'Roboto Mono', 'Ubuntu Mono', Menlo, Consolas, Courier, monospace\";\n};\n/**\n * @deprecated Please use `@atlaskit/focus-ring`\n */\n\nexport var focusRing = function focusRing() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"var(--ds-border-focused, \".concat(B100, \")\");\n  var outlineWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : gridSize() / 4;\n  deprecationWarning('@atlaskit/theme', 'focus ring mixin', 'Please use `@atlaskit/focus-ring` instead.');\n  return \"\\n  &:focus {\\n    outline: none;\\n    box-shadow: 0px 0px 0px \".concat(outlineWidth, \"px \").concat(color, \";\\n  }\\n\");\n};\n/**\n * @deprecated Please use `@atlaskit/focus-ring`\n */\n\nexport var noFocusRing = function noFocusRing() {\n  return \"\\n  box-shadow: none;\\n\";\n};\nexport var layers = {\n  card: function card() {\n    return 100;\n  },\n  navigation: function navigation() {\n    return 200;\n  },\n  dialog: function dialog() {\n    return 300;\n  },\n  layer: function layer() {\n    return 400;\n  },\n  blanket: function blanket() {\n    return 500;\n  },\n  modal: function modal() {\n    return 510;\n  },\n  flag: function flag() {\n    return 600;\n  },\n  spotlight: function spotlight() {\n    return 700;\n  },\n  tooltip: function tooltip() {\n    return 800;\n  }\n}; // eslint-disable-next-line @atlaskit/design-system/use-visually-hidden\n\n/**\n * @deprecated Please use `@atlaskit/visually-hidden`\n */\n\nexport var visuallyHidden = function visuallyHidden() {\n  deprecationWarning('@atlaskit/theme', 'visually hidden mixin', 'Please use `@atlaskit/visually-hidden` instead.');\n  return {\n    border: '0 !important',\n    clip: 'rect(1px, 1px, 1px, 1px) !important',\n    height: '1px !important',\n    overflow: 'hidden !important',\n    padding: '0 !important',\n    position: 'absolute !important',\n    width: '1px !important',\n    whiteSpace: 'nowrap !important'\n  };\n};\n/**\n * @deprecated Please use `@atlaskit/visually-hidden`\n */\n\nexport var assistive = visuallyHidden;\n/**\n * These styles are mirrored in:\n * packages/design-system/menu/src/internal/components/skeleton-shimmer.tsx\n *\n * Please update both.\n */\n\nexport var skeletonShimmer = function skeletonShimmer() {\n  return {\n    css: {\n      backgroundColor: \"var(--ds-background-neutral, \".concat(skeletonColor(), \")\"),\n      animationDuration: '1.5s',\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'linear',\n      animationDirection: 'alternate'\n    },\n    keyframes: {\n      from: {\n        backgroundColor: \"var(--ds-background-neutral, \".concat(skeletonColor(), \")\")\n      },\n      to: {\n        backgroundColor: \"var(--ds-background-neutral-hovered, \".concat(N30A, \")\")\n      }\n    }\n  };\n};","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/node_modules/@atlaskit/theme/dist/esm/constants.js"],"names":["deprecationWarning","B100","N30A","skeleton","skeletonColor","CHANNEL","DEFAULT_THEME_MODE","THEME_MODES","borderRadius","gridSize","fontSize","fontSizeSmall","fontFamily","codeFontFamily","focusRing","color","arguments","length","undefined","concat","outlineWidth","noFocusRing","layers","card","navigation","dialog","layer","blanket","modal","flag","spotlight","tooltip","visuallyHidden","border","clip","height","overflow","padding","position","width","whiteSpace","assistive","skeletonShimmer","css","backgroundColor","animationDuration","animationIterationCount","animationTimingFunction","animationDirection","keyframes","from","to"],"mappings":"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","sourcesContent":["import deprecationWarning from '@atlaskit/ds-lib/deprecation-warning';\nimport { B100, N30A, skeleton as skeletonColor } from './colors';\nexport var CHANNEL = '__ATLASKIT_THEME__';\nexport var DEFAULT_THEME_MODE = 'light';\nexport var THEME_MODES = ['light', 'dark'];\n/*\n  These theme values are expressed as functions so that if we decide to make\n  them dependent on props in the future, it wouldn't require a significant\n  refactor everywhere they are being used.\n*/\n\nexport var borderRadius = function borderRadius() {\n  return 3;\n};\nexport var gridSize = function gridSize() {\n  return 8;\n};\nexport var fontSize = function fontSize() {\n  return 14;\n};\nexport var fontSizeSmall = function fontSizeSmall() {\n  return 11;\n};\nexport var fontFamily = function fontFamily() {\n  return \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\";\n};\nexport var codeFontFamily = function codeFontFamily() {\n  return \"'SFMono-Medium', 'SF Mono', 'Segoe UI Mono', 'Roboto Mono', 'Ubuntu Mono', Menlo, Consolas, Courier, monospace\";\n};\n/**\n * @deprecated Please use `@atlaskit/focus-ring`\n */\n\nexport var focusRing = function focusRing() {\n  var color = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"var(--ds-border-focused, \".concat(B100, \")\");\n  var outlineWidth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : gridSize() / 4;\n  deprecationWarning('@atlaskit/theme', 'focus ring mixin', 'Please use `@atlaskit/focus-ring` instead.');\n  return \"\\n  &:focus {\\n    outline: none;\\n    box-shadow: 0px 0px 0px \".concat(outlineWidth, \"px \").concat(color, \";\\n  }\\n\");\n};\n/**\n * @deprecated Please use `@atlaskit/focus-ring`\n */\n\nexport var noFocusRing = function noFocusRing() {\n  return \"\\n  box-shadow: none;\\n\";\n};\nexport var layers = {\n  card: function card() {\n    return 100;\n  },\n  navigation: function navigation() {\n    return 200;\n  },\n  dialog: function dialog() {\n    return 300;\n  },\n  layer: function layer() {\n    return 400;\n  },\n  blanket: function blanket() {\n    return 500;\n  },\n  modal: function modal() {\n    return 510;\n  },\n  flag: function flag() {\n    return 600;\n  },\n  spotlight: function spotlight() {\n    return 700;\n  },\n  tooltip: function tooltip() {\n    return 800;\n  }\n}; // eslint-disable-next-line @atlaskit/design-system/use-visually-hidden\n\n/**\n * @deprecated Please use `@atlaskit/visually-hidden`\n */\n\nexport var visuallyHidden = function visuallyHidden() {\n  deprecationWarning('@atlaskit/theme', 'visually hidden mixin', 'Please use `@atlaskit/visually-hidden` instead.');\n  return {\n    border: '0 !important',\n    clip: 'rect(1px, 1px, 1px, 1px) !important',\n    height: '1px !important',\n    overflow: 'hidden !important',\n    padding: '0 !important',\n    position: 'absolute !important',\n    width: '1px !important',\n    whiteSpace: 'nowrap !important'\n  };\n};\n/**\n * @deprecated Please use `@atlaskit/visually-hidden`\n */\n\nexport var assistive = visuallyHidden;\n/**\n * These styles are mirrored in:\n * packages/design-system/menu/src/internal/components/skeleton-shimmer.tsx\n *\n * Please update both.\n */\n\nexport var skeletonShimmer = function skeletonShimmer() {\n  return {\n    css: {\n      backgroundColor: \"var(--ds-background-neutral, \".concat(skeletonColor(), \")\"),\n      animationDuration: '1.5s',\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'linear',\n      animationDirection: 'alternate'\n    },\n    keyframes: {\n      from: {\n        backgroundColor: \"var(--ds-background-neutral, \".concat(skeletonColor(), \")\")\n      },\n      to: {\n        backgroundColor: \"var(--ds-background-neutral-hovered, \".concat(N30A, \")\")\n      }\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}