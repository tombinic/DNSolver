{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useMemo } from 'react';\nimport { Popper as ReactPopper } from 'react-popper';\nexport { placements } from '@popperjs/core'; // Export types from PopperJS / React Popper\n\nvar constantModifiers = [{\n  name: 'flip',\n  options: {\n    flipVariations: false,\n    padding: 5,\n    boundary: 'clippingParents',\n    rootBoundary: 'viewport'\n  }\n}, {\n  name: 'preventOverflow',\n  options: {\n    padding: 5,\n    rootBoundary: 'document'\n  }\n}];\n\nfunction defaultChildrenFn() {\n  return null;\n}\n\nvar defaultOffset = [0, 8];\nexport function Popper(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? defaultChildrenFn : _ref$children,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? defaultOffset : _ref$offset,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom-start' : _ref$placement,\n      _ref$referenceElement = _ref.referenceElement,\n      referenceElement = _ref$referenceElement === void 0 ? undefined : _ref$referenceElement,\n      modifiers = _ref.modifiers,\n      _ref$strategy = _ref.strategy,\n      strategy = _ref$strategy === void 0 ? 'fixed' : _ref$strategy;\n\n  var _offset = _slicedToArray(offset, 2),\n      offsetX = _offset[0],\n      offsetY = _offset[1]; // Merge a new offset modifier only if new offset values passed in\n\n\n  var internalModifiers = useMemo(function () {\n    var offsetModifier = {\n      name: 'offset',\n      options: {\n        offset: [offsetX, offsetY]\n      }\n    };\n    return [].concat(constantModifiers, [offsetModifier]);\n  }, [offsetX, offsetY]); // Merge custom props and memoize\n\n  var mergedModifiers = useMemo(function () {\n    if (modifiers == null) {\n      return internalModifiers;\n    }\n\n    return [].concat(_toConsumableArray(internalModifiers), _toConsumableArray(modifiers));\n  }, [internalModifiers, modifiers]);\n  return /*#__PURE__*/React.createElement(ReactPopper, {\n    modifiers: mergedModifiers,\n    placement: placement,\n    strategy: strategy,\n    referenceElement: referenceElement\n  }, children);\n}","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/node_modules/@atlaskit/popper/dist/esm/Popper.js"],"names":["_toConsumableArray","_slicedToArray","React","useMemo","Popper","ReactPopper","placements","constantModifiers","name","options","flipVariations","padding","boundary","rootBoundary","defaultChildrenFn","defaultOffset","_ref","_ref$children","children","_ref$offset","offset","_ref$placement","placement","_ref$referenceElement","referenceElement","undefined","modifiers","_ref$strategy","strategy","_offset","offsetX","offsetY","internalModifiers","offsetModifier","concat","mergedModifiers","createElement"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useMemo } from 'react';\nimport { Popper as ReactPopper } from 'react-popper';\nexport { placements } from '@popperjs/core'; // Export types from PopperJS / React Popper\n\nvar constantModifiers = [{\n  name: 'flip',\n  options: {\n    flipVariations: false,\n    padding: 5,\n    boundary: 'clippingParents',\n    rootBoundary: 'viewport'\n  }\n}, {\n  name: 'preventOverflow',\n  options: {\n    padding: 5,\n    rootBoundary: 'document'\n  }\n}];\n\nfunction defaultChildrenFn() {\n  return null;\n}\n\nvar defaultOffset = [0, 8];\nexport function Popper(_ref) {\n  var _ref$children = _ref.children,\n      children = _ref$children === void 0 ? defaultChildrenFn : _ref$children,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? defaultOffset : _ref$offset,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom-start' : _ref$placement,\n      _ref$referenceElement = _ref.referenceElement,\n      referenceElement = _ref$referenceElement === void 0 ? undefined : _ref$referenceElement,\n      modifiers = _ref.modifiers,\n      _ref$strategy = _ref.strategy,\n      strategy = _ref$strategy === void 0 ? 'fixed' : _ref$strategy;\n\n  var _offset = _slicedToArray(offset, 2),\n      offsetX = _offset[0],\n      offsetY = _offset[1];\n\n  // Merge a new offset modifier only if new offset values passed in\n  var internalModifiers = useMemo(function () {\n    var offsetModifier = {\n      name: 'offset',\n      options: {\n        offset: [offsetX, offsetY]\n      }\n    };\n    return [].concat(constantModifiers, [offsetModifier]);\n  }, [offsetX, offsetY]); // Merge custom props and memoize\n\n  var mergedModifiers = useMemo(function () {\n    if (modifiers == null) {\n      return internalModifiers;\n    }\n\n    return [].concat(_toConsumableArray(internalModifiers), _toConsumableArray(modifiers));\n  }, [internalModifiers, modifiers]);\n  return /*#__PURE__*/React.createElement(ReactPopper, {\n    modifiers: mergedModifiers,\n    placement: placement,\n    strategy: strategy,\n    referenceElement: referenceElement\n  }, children);\n}"]},"metadata":{},"sourceType":"module"}