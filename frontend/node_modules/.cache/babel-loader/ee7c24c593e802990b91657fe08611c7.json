{"ast":null,"code":"import { portalClassName, portalParentClassName, portalParentSelector } from '../constants';\n/**\n * Creates a new portal container element with provided z-index and class name 'atlaskit-portal',\n * it is not be attached to any DOM node at this stage.\n * @param {number | string} zIndex - the z-index value of the newly created portal container element\n * @return {number} - The newly created container element\n */\n\nexport var createContainer = function createContainer(zIndex) {\n  var container = document.createElement('div');\n  container.className = portalClassName;\n  container.style.zIndex = \"\".concat(zIndex);\n  return container;\n};\n/**\n * Returns document body element\n * @return {number} - The document body element\n */\n\nvar getBody = function getBody() {\n  return document.body;\n};\n/**\n * Returns portal parent container. If no container exists already then it creates a new container with class name 'atlaskit-portal-container'\n * @return {Element} - The portal parent container div element\n */\n\n\nvar getPortalParent = function getPortalParent() {\n  var parentElement = document.querySelector(portalParentSelector);\n\n  if (!parentElement) {\n    var parent = document.createElement('div');\n    parent.className = portalParentClassName; // we are setting display to flex because we want each portal to create a new stacking context\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\n    parent.style.display = 'flex';\n    getBody().appendChild(parent);\n    return parent;\n  }\n\n  return parentElement;\n};\n/**\n * Removes portal container from portal parent container\n *  @param {HTMLDivElement | undefined} container - portal container to be removed from portal parent container\n */\n\n\nexport var removePortalContainer = function removePortalContainer(container) {\n  getPortalParent().removeChild(container);\n};\n/**\n * Appends portal container to portal parent container if it hasn't already been done\n *  @param {HTMLDivElement | undefined} container - portal container to be added to portal parent container\n */\n\nexport var appendPortalContainerIfNotAppended = function appendPortalContainerIfNotAppended(container) {\n  if (!container.parentElement) {\n    getPortalParent().appendChild(container);\n  }\n};","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/node_modules/@atlaskit/portal/dist/esm/internal/utils/portal-dom-utils.js"],"names":["portalClassName","portalParentClassName","portalParentSelector","createContainer","zIndex","container","document","createElement","className","style","concat","getBody","body","getPortalParent","parentElement","querySelector","parent","display","appendChild","removePortalContainer","removeChild","appendPortalContainerIfNotAppended"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,qBAA1B,EAAiDC,oBAAjD,QAA6E,cAA7E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;AAC5D,MAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;AACAF,EAAAA,SAAS,CAACG,SAAV,GAAsBR,eAAtB;AACAK,EAAAA,SAAS,CAACI,KAAV,CAAgBL,MAAhB,GAAyB,GAAGM,MAAH,CAAUN,MAAV,CAAzB;AACA,SAAOC,SAAP;AACD,CALM;AAMP;AACA;AACA;AACA;;AAEA,IAAIM,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,SAAOL,QAAQ,CAACM,IAAhB;AACD,CAFD;AAGA;AACA;AACA;AACA;;;AAGA,IAAIC,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/C,MAAIC,aAAa,GAAGR,QAAQ,CAACS,aAAT,CAAuBb,oBAAvB,CAApB;;AAEA,MAAI,CAACY,aAAL,EAAoB;AAClB,QAAIE,MAAM,GAAGV,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb;AACAS,IAAAA,MAAM,CAACR,SAAP,GAAmBP,qBAAnB,CAFkB,CAEwB;AAC1C;;AAEAe,IAAAA,MAAM,CAACP,KAAP,CAAaQ,OAAb,GAAuB,MAAvB;AACAN,IAAAA,OAAO,GAAGO,WAAV,CAAsBF,MAAtB;AACA,WAAOA,MAAP;AACD;;AAED,SAAOF,aAAP;AACD,CAdD;AAeA;AACA;AACA;AACA;;;AAGA,OAAO,IAAIK,qBAAqB,GAAG,SAASA,qBAAT,CAA+Bd,SAA/B,EAA0C;AAC3EQ,EAAAA,eAAe,GAAGO,WAAlB,CAA8Bf,SAA9B;AACD,CAFM;AAGP;AACA;AACA;AACA;;AAEA,OAAO,IAAIgB,kCAAkC,GAAG,SAASA,kCAAT,CAA4ChB,SAA5C,EAAuD;AACrG,MAAI,CAACA,SAAS,CAACS,aAAf,EAA8B;AAC5BD,IAAAA,eAAe,GAAGK,WAAlB,CAA8Bb,SAA9B;AACD;AACF,CAJM","sourcesContent":["import { portalClassName, portalParentClassName, portalParentSelector } from '../constants';\n/**\n * Creates a new portal container element with provided z-index and class name 'atlaskit-portal',\n * it is not be attached to any DOM node at this stage.\n * @param {number | string} zIndex - the z-index value of the newly created portal container element\n * @return {number} - The newly created container element\n */\n\nexport var createContainer = function createContainer(zIndex) {\n  var container = document.createElement('div');\n  container.className = portalClassName;\n  container.style.zIndex = \"\".concat(zIndex);\n  return container;\n};\n/**\n * Returns document body element\n * @return {number} - The document body element\n */\n\nvar getBody = function getBody() {\n  return document.body;\n};\n/**\n * Returns portal parent container. If no container exists already then it creates a new container with class name 'atlaskit-portal-container'\n * @return {Element} - The portal parent container div element\n */\n\n\nvar getPortalParent = function getPortalParent() {\n  var parentElement = document.querySelector(portalParentSelector);\n\n  if (!parentElement) {\n    var parent = document.createElement('div');\n    parent.className = portalParentClassName; // we are setting display to flex because we want each portal to create a new stacking context\n    // See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\n    parent.style.display = 'flex';\n    getBody().appendChild(parent);\n    return parent;\n  }\n\n  return parentElement;\n};\n/**\n * Removes portal container from portal parent container\n *  @param {HTMLDivElement | undefined} container - portal container to be removed from portal parent container\n */\n\n\nexport var removePortalContainer = function removePortalContainer(container) {\n  getPortalParent().removeChild(container);\n};\n/**\n * Appends portal container to portal parent container if it hasn't already been done\n *  @param {HTMLDivElement | undefined} container - portal container to be added to portal parent container\n */\n\nexport var appendPortalContainerIfNotAppended = function appendPortalContainerIfNotAppended(container) {\n  if (!container.parentElement) {\n    getPortalParent().appendChild(container);\n  }\n};"]},"metadata":{},"sourceType":"module"}