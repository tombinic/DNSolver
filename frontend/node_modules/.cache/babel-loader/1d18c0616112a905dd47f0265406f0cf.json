{"ast":null,"code":"import '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement, Fragment } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar EmotionCacheContext = /*#__PURE__*/createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = /*#__PURE__*/createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return /*#__PURE__*/forwardRef(render);\n}; // thus we only need to replace what is a valid character for JS, but not for CSS\n\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\n\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/createElement(type, newProps);\n  var possiblyStyleElement = /*#__PURE__*/createElement(Noop, null);\n  return /*#__PURE__*/createElement(Fragment, null, possiblyStyleElement, ele);\n}; // eslint-disable-next-line no-undef\n\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, createEmotionProps as c, hasOwnProperty as h, withEmotionCache as w };","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@emotion/core/dist/emotion-element-04d85134.browser.esm.js"],"names":["createContext","forwardRef","createElement","Fragment","createCache","getRegisteredStyles","insertStyles","serializeStyles","hasOwnProperty","Object","prototype","EmotionCacheContext","HTMLElement","ThemeContext","CacheProvider","Provider","withEmotionCache","func","render","props","ref","Consumer","cache","sanitizeIdentifier","identifier","replace","typePropName","labelPropName","createEmotionProps","type","process","env","NODE_ENV","css","indexOf","Error","newProps","key","call","error","stack","match","Noop","theme","cssProp","registered","undefined","registeredStyles","className","serialized","name","labelFromStack","rules","ele","possiblyStyleElement","Emotion","displayName","C","E","T","c","h","w"],"mappings":"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","sourcesContent":["import '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement, Fragment } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar EmotionCacheContext = /*#__PURE__*/createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = /*#__PURE__*/createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return /*#__PURE__*/forwardRef(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/createElement(type, newProps);\n  var possiblyStyleElement = /*#__PURE__*/createElement(Noop, null);\n\n\n  return /*#__PURE__*/createElement(Fragment, null, possiblyStyleElement, ele);\n}; // eslint-disable-next-line no-undef\n\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexport { CacheProvider as C, Emotion as E, ThemeContext as T, createEmotionProps as c, hasOwnProperty as h, withEmotionCache as w };\n"]},"metadata":{},"sourceType":"module"}