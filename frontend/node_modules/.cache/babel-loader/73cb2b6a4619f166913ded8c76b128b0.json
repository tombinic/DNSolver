{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { heading, link, linkActive, linkHover, linkOutline, subtleHeading, subtleText, text } from '../../colors';\nexport var SELECTOR = 'old-ds-theme-mode';\n/* eslint-disable @atlaskit/design-system/ensure-design-token-usage */\n\nvar baseResetStyles = [{\n  mode: 'light'\n}, {\n  mode: 'dark'\n}].map(function (theme) {\n  return \"\\n  .\".concat(theme.mode, \"-\").concat(SELECTOR, \" {\\n    color: \").concat(text({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" a {\\n    color: \").concat(link({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" a:hover {\\n    color: \").concat(linkHover({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" a:active {\\n    color: \").concat(linkActive({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" a:focus {\\n    outlineColor: \").concat(linkOutline({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h1,\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h2,\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h3,\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h4,\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h5 {\\n    color: \").concat(heading({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h6 {\\n    color: \").concat(subtleHeading({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" small {\\n    color: \").concat(subtleText({\n    theme: theme\n  }), \";\\n  }\");\n}).join('\\n');\n/* eslint-enable @atlaskit/design-system/ensure-design-token-usage */\n\nvar getStylesheetResetCSS = function getStylesheetResetCSS(backgroundColor) {\n  return \"body { background: \".concat(backgroundColor, \"; }\");\n};\n\nvar UNIQUE_INTERNAL_ID = 'ds--theme--ak-theme-provider';\nvar UNIQUE_BODY_BG_ID = 'ds--theme--ak-body-background';\n/**\n * This hooks conditionally sets body styles based on the theme mode applied.\n *\n * @param backgroundColor The background color to be applied at the root level of the application\n */\n\nvar useThemeResetStyles = function useThemeResetStyles(backgroundColor) {\n  var stylesheet = useRef(null);\n  var bgColorNode = useRef(null);\n  useEffect(function () {\n    var hasNode = document.getElementById(UNIQUE_INTERNAL_ID); // Bail out if the AKThemeProvider has already set the body and there is already a theme stylesheet\n    // Child nodes should not take precedence over a root node setting body bg\n\n    if (hasNode) {\n      return;\n    }\n\n    stylesheet.current = document.createElement('style');\n\n    if (document && document.head) {\n      stylesheet.current.id = UNIQUE_INTERNAL_ID; // prepend the theme reset styles\n\n      document.head.prepend(stylesheet.current);\n      stylesheet.current.innerHTML = baseResetStyles;\n      return function () {\n        // document && document.head is needed here most likely because of RTL or React DOM causing\n        // document.head to be null if removed\n        if (stylesheet.current && document && document.head) {\n          document.head.removeChild(stylesheet.current);\n          stylesheet.current = null;\n        }\n      };\n    }\n  }, []);\n  useEffect(function () {\n    var hasBodyNode = document.getElementById(UNIQUE_BODY_BG_ID);\n\n    if (document && document.head) {\n      if (!hasBodyNode) {\n        // if there is no body element node already, set it up and append to document.head\n        bgColorNode.current = document.createElement('style');\n        bgColorNode.current.id = UNIQUE_BODY_BG_ID;\n        document.head.append(bgColorNode.current);\n      } // body element node already exists so just update the backgroundColor\n\n\n      if (bgColorNode.current) {\n        var cssBgColor = getStylesheetResetCSS(backgroundColor);\n        bgColorNode.current.innerHTML = cssBgColor;\n      }\n\n      return function () {\n        if (bgColorNode.current && document && document.head) {\n          document.head.removeChild(bgColorNode.current);\n          bgColorNode.current = null;\n        }\n      };\n    }\n  }, [backgroundColor]);\n};\n\nexport default useThemeResetStyles;","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/node_modules/@atlaskit/theme/dist/esm/components/hooks/use-theme-reset-styles.js"],"names":["useEffect","useRef","heading","link","linkActive","linkHover","linkOutline","subtleHeading","subtleText","text","SELECTOR","baseResetStyles","mode","map","theme","concat","join","getStylesheetResetCSS","backgroundColor","UNIQUE_INTERNAL_ID","UNIQUE_BODY_BG_ID","useThemeResetStyles","stylesheet","bgColorNode","hasNode","document","getElementById","current","createElement","head","id","prepend","innerHTML","removeChild","hasBodyNode","append","cssBgColor"],"mappings":"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","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { heading, link, linkActive, linkHover, linkOutline, subtleHeading, subtleText, text } from '../../colors';\nexport var SELECTOR = 'old-ds-theme-mode';\n/* eslint-disable @atlaskit/design-system/ensure-design-token-usage */\n\nvar baseResetStyles = [{\n  mode: 'light'\n}, {\n  mode: 'dark'\n}].map(function (theme) {\n  return \"\\n  .\".concat(theme.mode, \"-\").concat(SELECTOR, \" {\\n    color: \").concat(text({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" a {\\n    color: \").concat(link({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" a:hover {\\n    color: \").concat(linkHover({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" a:active {\\n    color: \").concat(linkActive({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" a:focus {\\n    outlineColor: \").concat(linkOutline({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h1,\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h2,\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h3,\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h4,\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h5 {\\n    color: \").concat(heading({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" h6 {\\n    color: \").concat(subtleHeading({\n    theme: theme\n  }), \";\\n  }\\n  .\").concat(theme.mode, \"-\").concat(SELECTOR, \" small {\\n    color: \").concat(subtleText({\n    theme: theme\n  }), \";\\n  }\");\n}).join('\\n');\n/* eslint-enable @atlaskit/design-system/ensure-design-token-usage */\n\nvar getStylesheetResetCSS = function getStylesheetResetCSS(backgroundColor) {\n  return \"body { background: \".concat(backgroundColor, \"; }\");\n};\n\nvar UNIQUE_INTERNAL_ID = 'ds--theme--ak-theme-provider';\nvar UNIQUE_BODY_BG_ID = 'ds--theme--ak-body-background';\n/**\n * This hooks conditionally sets body styles based on the theme mode applied.\n *\n * @param backgroundColor The background color to be applied at the root level of the application\n */\n\nvar useThemeResetStyles = function useThemeResetStyles(backgroundColor) {\n  var stylesheet = useRef(null);\n  var bgColorNode = useRef(null);\n  useEffect(function () {\n    var hasNode = document.getElementById(UNIQUE_INTERNAL_ID); // Bail out if the AKThemeProvider has already set the body and there is already a theme stylesheet\n    // Child nodes should not take precedence over a root node setting body bg\n\n    if (hasNode) {\n      return;\n    }\n\n    stylesheet.current = document.createElement('style');\n\n    if (document && document.head) {\n      stylesheet.current.id = UNIQUE_INTERNAL_ID; // prepend the theme reset styles\n\n      document.head.prepend(stylesheet.current);\n      stylesheet.current.innerHTML = baseResetStyles;\n      return function () {\n        // document && document.head is needed here most likely because of RTL or React DOM causing\n        // document.head to be null if removed\n        if (stylesheet.current && document && document.head) {\n          document.head.removeChild(stylesheet.current);\n          stylesheet.current = null;\n        }\n      };\n    }\n  }, []);\n  useEffect(function () {\n    var hasBodyNode = document.getElementById(UNIQUE_BODY_BG_ID);\n\n    if (document && document.head) {\n      if (!hasBodyNode) {\n        // if there is no body element node already, set it up and append to document.head\n        bgColorNode.current = document.createElement('style');\n        bgColorNode.current.id = UNIQUE_BODY_BG_ID;\n        document.head.append(bgColorNode.current);\n      } // body element node already exists so just update the backgroundColor\n\n\n      if (bgColorNode.current) {\n        var cssBgColor = getStylesheetResetCSS(backgroundColor);\n        bgColorNode.current.innerHTML = cssBgColor;\n      }\n\n      return function () {\n        if (bgColorNode.current && document && document.head) {\n          document.head.removeChild(bgColorNode.current);\n          bgColorNode.current = null;\n        }\n      };\n    }\n  }, [backgroundColor]);\n};\n\nexport default useThemeResetStyles;"]},"metadata":{},"sourceType":"module"}