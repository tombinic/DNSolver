{"ast":null,"code":"var _jsxFileName = \"D:\\\\unipr\\\\Telematica\\\\Progetto\\\\Telematica\\\\frontend\\\\src\\\\components\\\\FancyBar.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport FancyAvatar from './FancyAvatar';\nimport lgImg from '../images/logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pages = [];\nconst settings = ['Profile', 'Logout'];\n\nconst FancyBar = () => {\n  _s();\n\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    style: {\n      backgroundColor: 'rgb(2,52,48)'\n    },\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            mr: 2,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: '10%'\n            },\n            src: lgImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          id: \"menu-appbar\",\n          anchorEl: anchorElNav,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'left'\n          },\n          keepMounted: true,\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n          },\n          open: Boolean(anchorElNav),\n          onClose: handleCloseNavMenu,\n          sx: {\n            display: {\n              xs: 'block',\n              md: 'none'\n            }\n          },\n          children: pages.map(page => /*#__PURE__*/_jsxDEV(MenuItem, {\n            onClick: handleCloseNavMenu,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              textAlign: \"center\",\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)\n          }, page, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'flex',\n              md: 'none'\n            }\n          },\n          children: \"LOGO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            display: {\n              xs: 'none',\n              md: 'flex'\n            }\n          },\n          children: pages.map(page => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseNavMenu,\n            sx: {\n              my: 2,\n              color: 'white',\n              display: 'block'\n            },\n            children: page\n          }, page, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 0\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Open settings\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleOpenUserMenu,\n              sx: {\n                p: 0\n              },\n              children: /*#__PURE__*/_jsxDEV(FancyAvatar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            sx: {\n              mt: '45px'\n            },\n            id: \"menu-appbar\",\n            anchorEl: anchorElUser,\n            anchorOrigin: {\n              vertical: 'top',\n              horizontal: 'right'\n            },\n            keepMounted: true,\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'right'\n            },\n            open: Boolean(anchorElUser),\n            onClose: handleCloseUserMenu,\n            children: settings.map(setting => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleCloseUserMenu,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                textAlign: \"center\",\n                children: setting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this)\n            }, setting, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FancyBar, \"QIsqpM/yGRL4/FzrSPXSWTpMbZs=\");\n\n_c = FancyBar;\nexport default FancyBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"FancyBar\");","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/src/components/FancyBar.jsx"],"names":["React","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Avatar","Button","Tooltip","MenuItem","FancyAvatar","lgImg","pages","settings","FancyBar","anchorElNav","setAnchorElNav","useState","anchorElUser","setAnchorElUser","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","backgroundColor","mr","display","xs","md","width","vertical","horizontal","Boolean","map","page","flexGrow","my","color","p","mt","setting"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FancyAvatar from './FancyAvatar';\r\nimport lgImg from '../images/logo.png';\r\n\r\nconst pages = [];\r\nconst settings = ['Profile', 'Logout'];\r\n\r\nconst FancyBar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar style={{backgroundColor: 'rgb(2,52,48)'}} position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\r\n          >\r\n            <img style={{ width: '10%'}} src={lgImg} />\r\n          </Typography>\r\n\r\n\r\n\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          \r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <FancyAvatar />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default FancyBar;\r\n"]},"metadata":{},"sourceType":"module"}