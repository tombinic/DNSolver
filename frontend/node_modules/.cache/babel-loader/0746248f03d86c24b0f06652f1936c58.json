{"ast":null,"code":"import { useEffect, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nimport { appendPortalContainerIfNotAppended, createContainer, removePortalContainer } from '../utils/portal-dom-utils';\nexport default function InternalPortal(props) {\n  var zIndex = props.zIndex,\n      children = props.children;\n  var container = useMemo(function () {\n    return createContainer(zIndex);\n  }, [zIndex]); // This is in the render method instead of useEffect so that\n  // the portal will be added to the DOM before the children render.\n  // For any further changes, ensure that the container does not have a\n  // parent besides the portal parent.\n\n  appendPortalContainerIfNotAppended(container);\n  useEffect(function () {\n    return function () {\n      removePortalContainer(container);\n    };\n  }, [container]);\n  return /*#__PURE__*/createPortal(children, container);\n}","map":{"version":3,"sources":["D:/unipr/Telematica/Progetto/Telematica/frontend/node_modules/@atlaskit/tooltip/node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal.js"],"names":["useEffect","useMemo","createPortal","appendPortalContainerIfNotAppended","createContainer","removePortalContainer","InternalPortal","props","zIndex","children","container"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,OAApB,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,kCAAT,EAA6CC,eAA7C,EAA8DC,qBAA9D,QAA2F,2BAA3F;AACA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAEA,MAAIC,SAAS,GAAGT,OAAO,CAAC,YAAY;AAClC,WAAOG,eAAe,CAACI,MAAD,CAAtB;AACD,GAFsB,EAEpB,CAACA,MAAD,CAFoB,CAAvB,CAH4C,CAK9B;AACd;AACA;AACA;;AAEAL,EAAAA,kCAAkC,CAACO,SAAD,CAAlC;AACAV,EAAAA,SAAS,CAAC,YAAY;AACpB,WAAO,YAAY;AACjBK,MAAAA,qBAAqB,CAACK,SAAD,CAArB;AACD,KAFD;AAGD,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;AAKA,SAAO,aAAaR,YAAY,CAACO,QAAD,EAAWC,SAAX,CAAhC;AACD","sourcesContent":["import { useEffect, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nimport { appendPortalContainerIfNotAppended, createContainer, removePortalContainer } from '../utils/portal-dom-utils';\nexport default function InternalPortal(props) {\n  var zIndex = props.zIndex,\n      children = props.children;\n  var container = useMemo(function () {\n    return createContainer(zIndex);\n  }, [zIndex]); // This is in the render method instead of useEffect so that\n  // the portal will be added to the DOM before the children render.\n  // For any further changes, ensure that the container does not have a\n  // parent besides the portal parent.\n\n  appendPortalContainerIfNotAppended(container);\n  useEffect(function () {\n    return function () {\n      removePortalContainer(container);\n    };\n  }, [container]);\n  return /*#__PURE__*/createPortal(children, container);\n}"]},"metadata":{},"sourceType":"module"}